<head>
    <link href="css/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="js/jquery-1.11.0.min.js"></script>
    <script src="js/moment.min.js"></script>

    <script src="js/Chart.min.js"></script>
    <script src="js/Chart.bundle.js"></script>

    <!-- Custom Theme files -->
    <link href="css/style.css" rel="stylesheet" type="text/css" media="all"/>

    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false); function hideURLbar(){ window.scrollTo(0,1); } </script>

    <!-- start-smoth-scrolling -->
    <script type="text/javascript" src="js/move-top.js"></script>
    <script type="text/javascript" src="js/easing.js"></script>
    	<script type="text/javascript">
    			jQuery(document).ready(function($) {
    				$(".scroll").click(function(event){
    					event.preventDefault();
    					$('html,body').animate({scrollTop:$(this.hash).offset().top},1000);
    				});
    			});
    	</script>
    <!-- //end-smoth-scrolling -->
    <link href="css/jquery.countdown.css" rel="stylesheet" type="text/css" media="all" />
    <script src="js/jquery.countdown.js"></script>
    <script src="js/script.js"></script>
    <!--responsive tab script here-->
    <script src="js/easyResponsiveTabs.js" type="text/javascript"></script>
    		    <script type="text/javascript">
    			    $(document).ready(function () {
    			        $('#horizontalTab').easyResponsiveTabs({
    			            type: 'default', //Types: default, vertical, accordion
    			            width: 'auto', //auto or any width like 600px
    			            fit: true   // 100% fit in a container
    			        });
    			    });
    			   </script>
    <!--//resposive tab-->
    <script>
        $(document).ready(function(c) {
        	$('.cros').on('click', function(c){
        		$('.user-profile').fadeOut('slow', function(c){
        	  		$('.user-profile').remove();
        		});
        	});

            //to get id and title of recording later...
            getUrlParams = function(){

                var params = {};

                if (location.search) {
                    var parts = location.search.substring(1).split('&');

                    for (var i = 0; i < parts.length; i++) {
                        var nv = parts[i].split('=');
                        if (!nv[0]) continue;
                        params[nv[0]] = nv[1] || true;
                    }
                }

                // Now you can get the parameters you want like so:
                console.log(params);
                return params;
            }
            url_params = getUrlParams(function(){
                $('#recording-title').text(url_params);
            });

            var report_id = url_params.report_id;
            if (report_id == undefined || report_id == "") {
                console.log("Wrong report_id");
            } else {
                console.log("Using report_id = " + report_id);
            }
            $.ajax({url: "get_analysis?task_id=" + report_id , success: function(result){
                console.log("get_analysis success");
                draw_graphs(result);
            }});


            function draw_graphs(report) {
                Chart.defaults.global.legend.display = false;
                var report_name = report.name;
                var total_score = report.total_score;
                $("#report_name").text("Speech report for " + report_name);
                var clarity_list = report.analyzers.clarity_analyzer;
                var labels = [];
                for (var i = 0; i <= 100; i += 5) {
                    labels.push(i + "%");
                }
                var ctx = document.getElementById("clarity");
                var clarity = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{

                            label: 'confidence',
                            data: clarity_list,
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 206, 86, 0.2)',
                                'rgba(75, 192, 192, 0.2)',
                                'rgba(153, 102, 255, 0.2)',
                                'rgba(255, 159, 64, 0.2)'
                            ],
                            borderColor: [
                                'rgba(255,99,132,1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)',
                                'rgba(153, 102, 255, 1)',
                                'rgba(255, 159, 64, 1)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero:true
                                }
                            }]
                        }
                    }
                });

                // ============================================
                var transcript = report.analyzers.full_text_analyzer;
                $("#transcription_section").text(transcript);

                // ============================================

                var word_distributions_list = report.analyzers.word_distribution_analyzer;
                var total_words = 0;
                word_distributions_list.forEach(function(entry_lst) {
                    var word = entry_lst[0];
                    var count = entry_lst[1];
                    total_words += count;
                });
                var top_items_word_distributions_list = word_distributions_list.slice(0, 10);
                top_items_word_distributions_list_filtered = []
                top_items_word_distributions_list.forEach(function(entry_lst) {
                    var word = entry_lst[0];
                    var count = entry_lst[1];
                    if (count > 1) {
                        top_items_word_distributions_list_filtered.push(entry_lst);
                    }
                });
                console.log("top_items_word_distributions_list_filtered: ", top_items_word_distributions_list_filtered);
                $("#tbody_occurences_in_words").html("");
                top_items_word_distributions_list_filtered.forEach(function(entry_lst) {
                    var word = entry_lst[0];
                    var count = entry_lst[1];
                    var percent = (count / total_words).toPrecision(2) * 10;
                    var risk_class = "low";
                    var risk_val = "Low";
                    if (percent >= 0.6) {
                        risk_class = "high";
                        risk_val = "High";
                    } else if (percent >= 0.1) {
                        risk_class = "med";
                        risk_val = "Medium";
                    }
                    $("#tbody_occurences_in_words").append("<tr>" + 
                            "<th>" + word + "</td>" + 
                            "<td>" + count +"</td>" +
                              "<td>" + percent + "p. </td>" + 
                              "<td class='" + risk_class + "'>" + risk_val + "</td>" +
                            "</tr>");
                })

                // ============================================
                var words_per_sec = report.analyzers.words_analyzer;
                var labels_for_words_per_sec = [];
                var list_of_colors = []
                var max_time = 100;
                if (words_per_sec.length < max_time) {
                    max_time = words_per_sec.length;
                }
                for (var i = 0; i <= max_time; i += 1) {
                    labels_for_words_per_sec.push(i);
                    list_of_colors.push('rgba(255, 99, 132, 0.2)');
                }

                var ctx = document.getElementById("wordsPerSecond");

                var wordsPerSecond = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels_for_words_per_sec,
                        datasets: [{
                            label: 'words',
                            data: words_per_sec,
                            backgroundColor: list_of_colors,
                            borderColor: [
                                'rgba(255,99,132,1)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero:true
                                }
                            }]
                        }
                    }
                });

                var ctx = document.getElementById("wordBasketAnalysis");


                var wbadata = {
                    labels: [
                        "bad words",
                        "buzz words",
                        "desirable",
                        "neutral"
                    ],
                    datasets: [
                        {
                            data: [300, 50, 100, 23],
                            backgroundColor: [
                                "#FF6384",
                                "#36A2EB",
                                "#FFCE56",
                                "#605293"
                            ],
                            hoverBackgroundColor: [
                                "#FF6384",
                                "#36A2EB",
                                "#FFCE56",
                                "#605293"
                            ]
                        }]
                };
                var wordBasketAnalysis = new Chart(ctx, {
                    type: 'doughnut',
                    data: wbadata,
                    options: {
                        cutoutPercentage: 40,
                        animation: {
                            animateRotate: true
                        }
                    }
                });
            }

        });
    </script>
    <body>
        <div class="container recording-analysis">

            <div class="row">
                <div class="col-xs-12">
                    <div class="analysis-container">
                        <h3 id="report_name">Repeated words</h3>
                    </div>
                </div>
                <div class="col-xs-12">
                    <div class="analysis-container">
                        <h3>Repeated words</h3>
                    </div>
                    <div class="col-xs-10 col-xs-offset-1">
                        <table class="table table-striped">
                          <thead>
                            <tr>
                              <th>Word</th>
                              <th># Occurences</th>
                              <th>Frequency Index</th>
                              <th>Risk</th>
                            </tr>
                          </thead>
                          <tbody id="tbody_occurences_in_words">
                            <tr>
                              <th>crappy</td>
                              <td>153</td>
                              <td>45%</td>
                              <td class="high">High</td>
                            </tr>
                            <tr>
                              <th>awesome</td>
                              <td>153</td>
                              <td>45%</td>
                              <td class="med">Medium</td>
                            </tr>
                            <tr>
                              <th>nice</td>
                              <td>153</td>
                              <td>45%</td>
                              <td class="low">Low</td>
                            </tr>
                          </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-xs-12">
                    <div class="analysis-container">
                        <h3>Clarity of Speech</h3>
                        <p>
                            This is how clearly the machine heard each word said.
                        </p>
                        <canvas id="clarity" class="chart" width="400" height="400"></canvas>
                    </div>
                </div>
                <div class="col-xs-12">
                    <div class="analysis-container">
                        <h3>Words Per Second</h3>
                        <p>
                        </p>
                        <canvas id="wordsPerSecond" class="chart" width="400" height="400"></canvas>
                    </div>
                </div>
                <div class="col-xs-8 col-xs-offset-2">
                    <div class="analysis-container">
                        <h3>Word Basket Analysis</h3>
                        <p>
                        </p>
                        <canvas id="wordBasketAnalysis" class="chart" width="400" height="400"></canvas>
                    </div>
                </div>
                <div class="col-xs-12">
                    <div class="analysis-container">
                        <h3>Transcription</h3>
                        <p id="transcription_section">
                            To Be Developed...
                        </p>
                    </div>
                </div>

                <div class="col-xs-12">
                    <div class="analysis-container">
                        <h3>Grammar</h3>
                        <p>
                            To Be Developed...
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </body>

</head>
